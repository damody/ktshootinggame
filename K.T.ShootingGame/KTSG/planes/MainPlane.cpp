//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : MainPlane.cpp
//  @ Date : 2011/8/30
//  @ Author : 
//
//


#include "MainPlane.h"
#include "DX11/InputState.h"
#include "algo/sgmath.h"
#include "DX11/InitDirect3DApp.h"
float updateUnit = 1.0f;

void MainPlane::Update(float dt) 
{
	static float speed = 150;
	if (InputStateS::instance().isKeyDown(KEY_NUMPAD1))
		m_straight->mVelocity +=50;
	if (InputStateS::instance().isKeyDown(KEY_NUMPAD2))
		m_straight->mVelocity -=50;
	Ogre::Vector3 temp = Ogre::Vector3(0, 0, 0);

	if(InputStateS::instance().isKeyPress(KEY_UP))		temp.y = updateUnit * dt * 40;
	if(InputStateS::instance().isKeyPress(KEY_DOWN))	temp.y = -updateUnit * dt * 40;
	if(InputStateS::instance().isKeyPress(KEY_RIGHT))	m_angle += updateUnit * dt * 30;
	if(InputStateS::instance().isKeyPress(KEY_LEFT))	m_angle -= updateUnit * dt * 30;

	if(InputStateS::instance().isKeyPress(KEY_SPACE))
	{
		((InitDirect3DApp*)D3DApp::d3dAppInstance)->m_BallptrManager.AddBallptrs(m_nWay->NewBallptrVector(GetBulletBall));
	}
	Ogre::Vector3 trans = GetRotation(temp, Ogre::Vector3(0, 0, -1), m_angle);
	m_position += trans;
	m_nWay->Position() += trans;
	m_nWay->Direction() = GetRotation(Ogre::Vector3::UNIT_Y, Ogre::Vector3::NEGATIVE_UNIT_Z, m_angle);
	
	UpdateDataToDraw();
}

void MainPlane::UpdateDataToDraw()
{
	m_pic.position.x = m_position.x;
	m_pic.position.y = m_position.y;
	m_pic.position.z = 0;
	m_pic.angle = m_angle;
	m_pic.size.x = (float)m_w;
	m_pic.size.y = (float)m_h;
}

int MainPlane::UpdateTower()
{
	return 0;
}


